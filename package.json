{
  "name": "v-p-sm",
  "version": "0.0.1",
  "description": "V-portal SystemMeta Service",
  "repository": {
    "type": "git",
    "url": "https://wire.lgcns.com/bitbucket/scm/vrs/v-portal-be-systemmeta.git"
  },
  "scripts": {
    "start": "npm run init:maria && npm run start:ts",
    "start:ts": "npm run build:ts && npm run service",
    "start:profile": "npm run build:ts && npm run service -- --profile ",
    "build": "npm run build:ts",
    "build:config": "npm run clean && webpack --display-error-details --bail --config ",
    "build:ts": "npm run build:config -- config/webpack.config.release.js",
    "build:ts:dev": "npm run build:config -- config/webpack.config.dev.js",
    "build:ts:watch": "npm run build:ts:dev -- --watch",
    "build:ts:unit-tests": "npm run clean:unit-tests && tsc --outDir compiled_tests",
    "clean": "rm -rf ./dist",
    "clean:unit-tests": "rm -rf ./.nyc_output ./coverage ./compiled_tests",
    "debug": "npm run build:ts:dev && npm run service -- --debug-port 5858",
    "package-deploy": "export WHOAMI=$(npm run whoami -s) && export STACK_NAME=local-$WHOAMI-$npm_package_name && export ARTIFACTS_BUCKET=service-definition-service-artifacts && mkdir -p build/output && npm run build:ts && npm run sam:package && npm run sam:deploy",
    "sam:validate": "sam validate --profile default --template microservice.sam.yml",
    "sam:package": "aws cloudformation package --profile default --s3-bucket $ARTIFACTS_BUCKET --template-file microservice.sam.yml --s3-prefix local-build-artifacts/$npm_package_name/$WHOAMI/local-0.0.1/lambda --output-template-file build/output/package.yml",
    "sam:deploy": "aws cloudformation deploy --profile default --template-file build/output/package.yml --stack-name $STACK_NAME --capabilities CAPABILITY_IAM --parameter-overrides paramReleaseVersion=local-0.0.1 paramFeatureBranch=$WHOAMI paramEnvironmentDomain=$(grep dev.domain config/environments.config | cut -d= -f2)",
    "service": "sam local start-api --port $(grep local.port config/environments.config | cut -d= -f2) --profile default --docker-network mariadb --template microservice.sam.yml --parameter-overrides \"ParameterKey=paramFeatureBranch,ParameterValue=local ParameterKey=paramEnvironmentDomain,ParameterValue=$(grep dev.domain config/environments.config | cut -d= -f2)\" --skip-pull-image",
    "whoami": "whoami | sed 's/\\.//g'",
    "start:maria": "docker-compose up -d",
    "stop:maria": "docker-compose down",
    "init:maria": "flyway -c src/repositories/initialize/flyway.js migrate",
    "clean:maria": "flyway -c src/repositories/initialize/flyway.js clean",
    "update:url": "export APIURI=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].Outputs[?OutputKey==`ApiUrl`].OutputValue' --output text) && sed -i -e \"s#http://127.0.0.1:3500#$APIURI#g\" api-tests/postman_environment/*.deployed.json",
    "lint": "npm run lint:src && npm run lint:spec",
    "lint:src": "eslint --config .eslintrc-for-source.yaml --ignore-pattern **/*.spec.ts --fix './src/**/*.ts'",
    "lint:spec": "eslint --config .eslintrc-for-spec.yaml --fix './src/**/*.spec.ts'",
    "coverage": "npm run coverage:unit",
    "coverage:unit": "nyc --nycrc-path=config/.nycrc.yaml npm run test:unit",
    "test": "npm run test:unit",
    "test:unit": "mocha --require ts-node/register --config=config/.mocharc.yaml src/**/*.spec.ts",
    "test:unit:coverage": "npm run coverage:unit",
    "test:module": "npm run test:module:local",
    "test:module:local": "for collection in api-tests/module/*.json; do newman run \"$collection\" --environment api-tests/postman_environment/v-portal-be-systemMeta.local.json -r cli; done",
    "test:module:deployed": "newman run $POSTMAN_COLLECTION --environment api-tests/postman_environment/v-portal-be-systemMeta.deployed.json -r cli",
    "test:health-check": "for collection in api-tests/health/*; do newman run \"$collection\" --environment api-tests/postman_environment/v-portal-be-systemMeta.deployed.json -r cli; done",
    "test:smoke": "for collection in api-tests/smoke/*; do newman run \"$collection\" --environment api-tests/postman_environment/v-portal-be-systemMeta.deployed.json -r cli; done"
  },
  "private": true,
  "license": "UNLICENSED",
  "author": "LG Developers",
  "dependencies": {
    "aws-api-gateway-client": "^0.2.17",
    "aws-sdk": "^2.551.0",
    "flatted": "^2.0.1",
    "inversify": "^5.0.1",
    "inversify-inject-decorators": "^3.1.0",
    "mariadb": "^2.1.4",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.27",
    "node-flywaydb": "^2.1.1",
    "promise-mysql": "^4.1.1",
    "reflect-metadata": "^0.1.13",
    "request": "^2.88.0",
    "request-promise-native": "^1.0.8",
    "uuid": "^3.3.3",
    "yup": "^0.28.0"
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.39",
    "@types/chai": "^4.2.7",
    "@types/mocha": "^5.2.7",
    "@types/node": "^13.1.0",
    "@types/request-promise-native": "^1.0.17",
    "@types/sinon": "^7.5.1",
    "@typescript-eslint/eslint-plugin": "^2.13.0",
    "@typescript-eslint/parser": "^2.13.0",
    "chai": "^4.2.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.8.0",
    "eslint-plugin-prettier": "^3.1.2",
    "eslint-plugin-sonarjs": "^0.5.0",
    "mocha": "^6.2.2",
    "moment": "^2.24.0",
    "newman": "^4.5.7",
    "nyc": "^14.1.1",
    "prettier": "^1.19.1",
    "sinon": "^8.0.1",
    "ts-loader": "^6.2.1",
    "ts-node": "^8.5.4",
    "typescript": "^3.7.4",
    "webpack": "^4.41.4",
    "webpack-cli": "^3.3.10"
  }
}
